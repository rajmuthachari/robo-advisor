{"ast":null,"code":"var _jsxFileName = \"/Users/raj/MSc/BMD5302/robo-advisor/frontend/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Stepper, Step, StepLabel, Typography, Button, Card, CardContent, Radio, RadioGroup, FormControlLabel, FormControl, CircularProgress, Paper, Container, Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { ArrowForward, ArrowBack, CheckCircle } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Styled components\nconst QuestionCard = styled(Card)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  borderRadius: theme.spacing(2),\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)'\n  }\n}));\n_c = QuestionCard;\nconst OptionButton = styled(FormControlLabel)(({\n  theme,\n  selected\n}) => ({\n  width: '100%',\n  margin: theme.spacing(1, 0),\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(1),\n  border: selected ? `2px solid ${theme.palette.primary.main}` : '1px solid #e0e0e0',\n  backgroundColor: selected ? 'rgba(63, 81, 181, 0.08)' : 'white',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: selected ? 'rgba(63, 81, 181, 0.12)' : 'rgba(0, 0, 0, 0.04)',\n    transform: 'scale(1.01)'\n  }\n}));\n_c2 = OptionButton;\nconst NavigationButton = styled(Button)(({\n  theme\n}) => ({\n  margin: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  borderRadius: theme.spacing(3)\n}));\n_c3 = NavigationButton;\nconst SectionHeading = styled(Typography)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  color: theme.palette.primary.main,\n  fontWeight: 600\n}));\n\n// Main Questionnaire Component\n_c4 = SectionHeading;\nconst Questionnaire = ({\n  onComplete\n}) => {\n  _s();\n  const [questionnaire, setQuestionnaire] = useState(null);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n\n  // Fetch questionnaire data\n  useEffect(() => {\n    const fetchQuestionnaire = async () => {\n      try {\n        setLoading(true);\n        // For testing, let's use a mock response instead of actual API call\n        // In production, uncomment this:\n        const response = await axios.get(`${API_URL}/questionnaire`);\n\n        // Mock questionnaire data for testing\n        const mockQuestionnaire = {\n          id: \"simple_risk_assessment\",\n          title: \"Risk Tolerance Assessment\",\n          description: \"This questionnaire will help us understand your risk tolerance and investment goals.\",\n          sections: [{\n            id: \"goals\",\n            title: \"Financial Goals & Time Horizon\",\n            description: \"Understanding your goals helps us match your portfolio\",\n            weight: 1.2\n          }, {\n            id: \"situation\",\n            title: \"Financial Situation\",\n            description: \"Your current financial position affects risk tolerance\",\n            weight: 1.0\n          }],\n          questions: [{\n            id: \"q1\",\n            text: \"What is your primary investment objective?\",\n            options: [{\n              \"text\": \"Preserve my capital\",\n              \"score\": 1\n            }, {\n              \"text\": \"Grow my capital steadily over time\",\n              \"score\": 2\n            }, {\n              \"text\": \"Maximize long-term returns, accepting short-term risk\",\n              \"score\": 3\n            }],\n            section: \"goals\"\n          }, {\n            id: \"q2\",\n            text: \"When do you expect to start withdrawing a significant portion of this investment?\",\n            options: [{\n              \"text\": \"Within 3 years\",\n              \"score\": 1\n            }, {\n              \"text\": \"Between 3 and 7 years\",\n              \"score\": 2\n            }, {\n              \"text\": \"After 7 years\",\n              \"score\": 3\n            }],\n            section: \"goals\"\n          }, {\n            id: \"q3\",\n            text: \"How would you describe your household income stability?\",\n            options: [{\n              \"text\": \"Unstable or fluctuating\",\n              \"score\": 1\n            }, {\n              \"text\": \"Mostly stable\",\n              \"score\": 2\n            }, {\n              \"text\": \"Very stable and predictable\",\n              \"score\": 3\n            }],\n            section: \"situation\"\n          }, {\n            id: \"q4\",\n            text: \"Do you have a financial safety net (e.g., emergency fund, insurance)?\",\n            options: [{\n              \"text\": \"Not at all\",\n              \"score\": 1\n            }, {\n              \"text\": \"Partially\",\n              \"score\": 2\n            }, {\n              \"text\": \"Fully covered\",\n              \"score\": 3\n            }],\n            section: \"situation\"\n          }]\n        };\n        setQuestionnaire(mockQuestionnaire);\n\n        // Group questions by section\n        const sectionList = mockQuestionnaire.sections.map(section => ({\n          ...section,\n          questions: mockQuestionnaire.questions.filter(q => q.section === section.id)\n        }));\n        setSections(sectionList);\n\n        // Initialize responses object\n        const initialResponses = {};\n        mockQuestionnaire.questions.forEach(q => {\n          initialResponses[q.id] = null;\n        });\n        setResponses(initialResponses);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load questionnaire. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching questionnaire:', err);\n      }\n    };\n    fetchQuestionnaire();\n  }, []);\n\n  // Get current section questions\n  const getCurrentSectionQuestions = () => {\n    if (sections.length === 0) return [];\n    return sections[currentSection].questions;\n  };\n\n  // Handle option selection\n  const handleOptionSelect = (questionId, value) => {\n    setResponses({\n      ...responses,\n      [questionId]: value\n    });\n  };\n\n  // Navigation handlers\n  const handleNext = () => {\n    const sectionQuestions = getCurrentSectionQuestions();\n    if (currentQuestion < sectionQuestions.length - 1) {\n      // Move to next question in section\n      setCurrentQuestion(currentQuestion + 1);\n    } else if (currentSection < sections.length - 1) {\n      // Move to next section\n      setCurrentSection(currentSection + 1);\n      setCurrentQuestion(0);\n    } else {\n      // Questionnaire complete\n      submitQuestionnaire();\n    }\n  };\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      // Move to previous question in section\n      setCurrentQuestion(currentQuestion - 1);\n    } else if (currentSection > 0) {\n      // Move to last question of previous section\n      setCurrentSection(currentSection - 1);\n      const prevSectionQuestions = sections[currentSection - 1].questions;\n      setCurrentQuestion(prevSectionQuestions.length - 1);\n    }\n  };\n\n  // Submit questionnaire\n  const submitQuestionnaire = async () => {\n    try {\n      setLoading(true);\n\n      // Convert responses object to array of scores\n      const responseScores = Object.values(responses).filter(score => score !== null);\n\n      // For testing, let's use a mock response instead of actual API call\n      // In production, uncomment this:\n      // const response = await axios.post(`${API_URL}/complete`, {\n      //   responses: responseScores\n      // });\n\n      // Mock response data for testing\n      const mockResponse = {\n        data: {\n          risk_assessment: {\n            profile: \"Moderate\",\n            risk_aversion: 3.5\n          },\n          portfolio: {\n            weights: {\n              \"SPDR Straits Times Index ETF\": 0.45,\n              \"Nikko AM Singapore STI ETF\": 0.45,\n              \"Lion-OCBC Securities Hang Seng TECH ETF\": 0.10\n            },\n            return: 0.12,\n            volatility: 0.11,\n            sharpe_ratio: 1.06\n          },\n          funds: {\n            \"SPDR Straits Times Index ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.117,\n                \"Annualized Volatility\": 0.10\n              },\n              metadata: {\n                fund_manager: \"State Street Global Adv Singapore Ltd\"\n              }\n            },\n            \"Nikko AM Singapore STI ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.121,\n                \"Annualized Volatility\": 0.107\n              },\n              metadata: {\n                fund_manager: \"Nikko Asset Management Asia Limited\"\n              }\n            },\n            \"Lion-OCBC Securities Hang Seng TECH ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.192,\n                \"Annualized Volatility\": 0.372\n              },\n              metadata: {\n                fund_manager: \"Lion Global Investors Ltd\"\n              }\n            }\n          }\n        }\n      };\n\n      // Call onComplete with results\n      onComplete(mockResponse.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to submit your responses. Please try again later.');\n      setLoading(false);\n      console.error('Error submitting questionnaire:', err);\n    }\n  };\n\n  // Check if current question is answered\n  const isCurrentQuestionAnswered = () => {\n    var _sectionQuestions$cur;\n    if (!questionnaire || sections.length === 0) return false;\n    const sectionQuestions = getCurrentSectionQuestions();\n    if (sectionQuestions.length === 0) return false;\n    const currentQuestionId = (_sectionQuestions$cur = sectionQuestions[currentQuestion]) === null || _sectionQuestions$cur === void 0 ? void 0 : _sectionQuestions$cur.id;\n    return responses[currentQuestionId] !== null && responses[currentQuestionId] !== undefined;\n  };\n\n  // Loading state\n  if (loading && !questionnaire) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          maxWidth: 500,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"error\",\n          gutterBottom: true,\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3\n          },\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this);\n  }\n\n  // No questionnaire data\n  if (!questionnaire) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No questionnaire available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the questionnaire\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: questionnaire.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), questionnaire.description && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: questionnaire.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: currentSection,\n        alternativeLabel: true,\n        sx: {\n          mt: 4,\n          mb: 2\n        },\n        children: sections.map(section => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), sections.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SectionHeading, {\n          variant: \"h5\",\n          children: sections[currentSection].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), sections[currentSection].description && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          paragraph: true,\n          children: sections[currentSection].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this), getCurrentSectionQuestions().length > 0 && /*#__PURE__*/_jsxDEV(QuestionCard, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Question \", currentQuestion + 1, \" of \", getCurrentSectionQuestions().length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              paragraph: true,\n              children: getCurrentSectionQuestions()[currentQuestion].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: responses[getCurrentSectionQuestions()[currentQuestion].id] || '',\n                onChange: e => handleOptionSelect(getCurrentSectionQuestions()[currentQuestion].id, parseInt(e.target.value)),\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: getCurrentSectionQuestions()[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(OptionButton, {\n                      value: option.score,\n                      control: /*#__PURE__*/_jsxDEV(Radio, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 40\n                      }, this),\n                      label: option.text,\n                      selected: responses[getCurrentSectionQuestions()[currentQuestion].id] === option.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 404,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(NavigationButton, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 28\n            }, this),\n            onClick: handleBack,\n            disabled: currentSection === 0 && currentQuestion === 0,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(NavigationButton, {\n            variant: \"contained\",\n            endIcon: currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 130\n            }, this) : /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 148\n            }, this),\n            onClick: handleNext,\n            disabled: !isCurrentQuestionAnswered() || loading,\n            children: [currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? 'Submit' : 'Next', loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              sx: {\n                ml: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"HqVRy10c8oZBMN6cXSjWxsFP+xs=\");\n_c5 = Questionnaire;\nexport default Questionnaire;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"QuestionCard\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"NavigationButton\");\n$RefreshReg$(_c4, \"SectionHeading\");\n$RefreshReg$(_c5, \"Questionnaire\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stepper","Step","StepLabel","Typography","Button","Card","CardContent","Radio","RadioGroup","FormControlLabel","FormControl","CircularProgress","Paper","Container","Grid","styled","ArrowForward","ArrowBack","CheckCircle","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","QuestionCard","theme","marginTop","spacing","marginBottom","boxShadow","borderRadius","transition","transform","_c","OptionButton","selected","width","margin","padding","border","palette","primary","main","backgroundColor","_c2","NavigationButton","_c3","SectionHeading","color","fontWeight","_c4","Questionnaire","onComplete","_s","questionnaire","setQuestionnaire","currentSection","setCurrentSection","currentQuestion","setCurrentQuestion","responses","setResponses","loading","setLoading","error","setError","sections","setSections","fetchQuestionnaire","response","get","mockQuestionnaire","id","title","description","weight","questions","text","options","section","sectionList","map","filter","q","initialResponses","forEach","err","console","getCurrentSectionQuestions","length","handleOptionSelect","questionId","value","handleNext","sectionQuestions","submitQuestionnaire","handleBack","prevSectionQuestions","responseScores","Object","values","score","mockResponse","data","risk_assessment","profile","risk_aversion","portfolio","weights","return","volatility","sharpe_ratio","funds","metrics","metadata","fund_manager","isCurrentQuestionAnswered","_sectionQuestions$cur","currentQuestionId","undefined","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","maxWidth","textAlign","variant","gutterBottom","mt","onClick","window","location","reload","my","align","paragraph","activeStep","alternativeLabel","mb","component","fullWidth","onChange","e","parseInt","target","container","option","index","item","xs","control","label","startIcon","disabled","endIcon","size","ml","_c5","$RefreshReg$"],"sources":["/Users/raj/MSc/BMD5302/robo-advisor/frontend/src/components/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Stepper, \n  Step, \n  StepLabel, \n  Typography, \n  Button, \n  Card, \n  CardContent, \n  Radio, \n  RadioGroup,\n  FormControlLabel,\n  FormControl, \n  CircularProgress, \n  Paper,\n  Container,\n  Grid\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { ArrowForward, ArrowBack, CheckCircle } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configuration\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Styled components\nconst QuestionCard = styled(Card)(({ theme }) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  borderRadius: theme.spacing(2),\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n  },\n}));\n\nconst OptionButton = styled(FormControlLabel)(({ theme, selected }) => ({\n  width: '100%',\n  margin: theme.spacing(1, 0),\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(1),\n  border: selected ? `2px solid ${theme.palette.primary.main}` : '1px solid #e0e0e0',\n  backgroundColor: selected ? 'rgba(63, 81, 181, 0.08)' : 'white',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: selected ? 'rgba(63, 81, 181, 0.12)' : 'rgba(0, 0, 0, 0.04)',\n    transform: 'scale(1.01)',\n  },\n}));\n\nconst NavigationButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  borderRadius: theme.spacing(3),\n}));\n\nconst SectionHeading = styled(Typography)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  color: theme.palette.primary.main,\n  fontWeight: 600,\n}));\n\n// Main Questionnaire Component\nconst Questionnaire = ({ onComplete }) => {\n  const [questionnaire, setQuestionnaire] = useState(null);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sections, setSections] = useState([]);\n\n  // Fetch questionnaire data\n  useEffect(() => {\n    const fetchQuestionnaire = async () => {\n      try {\n        setLoading(true);\n        // For testing, let's use a mock response instead of actual API call\n        // In production, uncomment this:\n        const response = await axios.get(`${API_URL}/questionnaire`);\n        \n        // Mock questionnaire data for testing\n        const mockQuestionnaire = {\n          id: \"simple_risk_assessment\",\n          title: \"Risk Tolerance Assessment\",\n          description: \"This questionnaire will help us understand your risk tolerance and investment goals.\",\n          sections: [\n            {\n              id: \"goals\",\n              title: \"Financial Goals & Time Horizon\",\n              description: \"Understanding your goals helps us match your portfolio\",\n              weight: 1.2\n            },\n            {\n              id: \"situation\",\n              title: \"Financial Situation\",\n              description: \"Your current financial position affects risk tolerance\",\n              weight: 1.0\n            }\n          ],\n          questions: [\n            {\n              id: \"q1\",\n              text: \"What is your primary investment objective?\",\n              options: [\n                {\"text\": \"Preserve my capital\", \"score\": 1},\n                {\"text\": \"Grow my capital steadily over time\", \"score\": 2},\n                {\"text\": \"Maximize long-term returns, accepting short-term risk\", \"score\": 3}\n              ],\n              section: \"goals\"\n            },\n            {\n              id: \"q2\",\n              text: \"When do you expect to start withdrawing a significant portion of this investment?\",\n              options: [\n                {\"text\": \"Within 3 years\", \"score\": 1},\n                {\"text\": \"Between 3 and 7 years\", \"score\": 2},\n                {\"text\": \"After 7 years\", \"score\": 3}\n              ],\n              section: \"goals\"\n            },\n            {\n              id: \"q3\",\n              text: \"How would you describe your household income stability?\",\n              options: [\n                {\"text\": \"Unstable or fluctuating\", \"score\": 1},\n                {\"text\": \"Mostly stable\", \"score\": 2},\n                {\"text\": \"Very stable and predictable\", \"score\": 3}\n              ],\n              section: \"situation\"\n            },\n            {\n              id: \"q4\",\n              text: \"Do you have a financial safety net (e.g., emergency fund, insurance)?\",\n              options: [\n                {\"text\": \"Not at all\", \"score\": 1},\n                {\"text\": \"Partially\", \"score\": 2},\n                {\"text\": \"Fully covered\", \"score\": 3}\n              ],\n              section: \"situation\"\n            }\n          ]\n        };\n\n        setQuestionnaire(mockQuestionnaire);\n        \n        // Group questions by section\n        const sectionList = mockQuestionnaire.sections.map(section => ({\n          ...section,\n          questions: mockQuestionnaire.questions.filter(q => q.section === section.id)\n        }));\n        \n        setSections(sectionList);\n        \n        // Initialize responses object\n        const initialResponses = {};\n        mockQuestionnaire.questions.forEach(q => {\n          initialResponses[q.id] = null;\n        });\n        setResponses(initialResponses);\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load questionnaire. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching questionnaire:', err);\n      }\n    };\n\n    fetchQuestionnaire();\n  }, []);\n\n  // Get current section questions\n  const getCurrentSectionQuestions = () => {\n    if (sections.length === 0) return [];\n    return sections[currentSection].questions;\n  };\n\n  // Handle option selection\n  const handleOptionSelect = (questionId, value) => {\n    setResponses({\n      ...responses,\n      [questionId]: value\n    });\n  };\n\n  // Navigation handlers\n  const handleNext = () => {\n    const sectionQuestions = getCurrentSectionQuestions();\n    \n    if (currentQuestion < sectionQuestions.length - 1) {\n      // Move to next question in section\n      setCurrentQuestion(currentQuestion + 1);\n    } else if (currentSection < sections.length - 1) {\n      // Move to next section\n      setCurrentSection(currentSection + 1);\n      setCurrentQuestion(0);\n    } else {\n      // Questionnaire complete\n      submitQuestionnaire();\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      // Move to previous question in section\n      setCurrentQuestion(currentQuestion - 1);\n    } else if (currentSection > 0) {\n      // Move to last question of previous section\n      setCurrentSection(currentSection - 1);\n      const prevSectionQuestions = sections[currentSection - 1].questions;\n      setCurrentQuestion(prevSectionQuestions.length - 1);\n    }\n  };\n\n  // Submit questionnaire\n  const submitQuestionnaire = async () => {\n    try {\n      setLoading(true);\n      \n      // Convert responses object to array of scores\n      const responseScores = Object.values(responses).filter(score => score !== null);\n      \n      // For testing, let's use a mock response instead of actual API call\n      // In production, uncomment this:\n      // const response = await axios.post(`${API_URL}/complete`, {\n      //   responses: responseScores\n      // });\n      \n      // Mock response data for testing\n      const mockResponse = {\n        data: {\n          risk_assessment: {\n            profile: \"Moderate\",\n            risk_aversion: 3.5\n          },\n          portfolio: {\n            weights: {\n              \"SPDR Straits Times Index ETF\": 0.45,\n              \"Nikko AM Singapore STI ETF\": 0.45,\n              \"Lion-OCBC Securities Hang Seng TECH ETF\": 0.10\n            },\n            return: 0.12,\n            volatility: 0.11,\n            sharpe_ratio: 1.06\n          },\n          funds: {\n            \"SPDR Straits Times Index ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.117,\n                \"Annualized Volatility\": 0.10\n              },\n              metadata: {\n                fund_manager: \"State Street Global Adv Singapore Ltd\"\n              }\n            },\n            \"Nikko AM Singapore STI ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.121,\n                \"Annualized Volatility\": 0.107\n              },\n              metadata: {\n                fund_manager: \"Nikko Asset Management Asia Limited\"\n              }\n            },\n            \"Lion-OCBC Securities Hang Seng TECH ETF\": {\n              metrics: {\n                \"Annualized Return\": 0.192,\n                \"Annualized Volatility\": 0.372\n              },\n              metadata: {\n                fund_manager: \"Lion Global Investors Ltd\"\n              }\n            }\n          }\n        }\n      };\n      \n      // Call onComplete with results\n      onComplete(mockResponse.data);\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to submit your responses. Please try again later.');\n      setLoading(false);\n      console.error('Error submitting questionnaire:', err);\n    }\n  };\n\n  // Check if current question is answered\n  const isCurrentQuestionAnswered = () => {\n    if (!questionnaire || sections.length === 0) return false;\n    \n    const sectionQuestions = getCurrentSectionQuestions();\n    if (sectionQuestions.length === 0) return false;\n    \n    const currentQuestionId = sectionQuestions[currentQuestion]?.id;\n    return responses[currentQuestionId] !== null && responses[currentQuestionId] !== undefined;\n  };\n\n  // Loading state\n  if (loading && !questionnaire) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <Paper elevation={3} sx={{ p: 4, maxWidth: 500, textAlign: 'center' }}>\n          <Typography variant=\"h5\" color=\"error\" gutterBottom>\n            Error\n          </Typography>\n          <Typography>{error}</Typography>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            sx={{ mt: 3 }}\n            onClick={() => window.location.reload()}\n          >\n            Try Again\n          </Button>\n        </Paper>\n      </Box>\n    );\n  }\n\n  // No questionnaire data\n  if (!questionnaire) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <Typography>No questionnaire available.</Typography>\n      </Box>\n    );\n  }\n\n  // Render the questionnaire\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ width: '100%', my: 4 }}>\n        {/* Questionnaire Header */}\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          {questionnaire.title}\n        </Typography>\n        \n        {questionnaire.description && (\n          <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" paragraph>\n            {questionnaire.description}\n          </Typography>\n        )}\n\n        {/* Progress Stepper */}\n        <Stepper activeStep={currentSection} alternativeLabel sx={{ mt: 4, mb: 2 }}>\n          {sections.map((section) => (\n            <Step key={section.id}>\n              <StepLabel>{section.title}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        {/* Current Section */}\n        {sections.length > 0 && (\n          <>\n            <SectionHeading variant=\"h5\">\n              {sections[currentSection].title}\n            </SectionHeading>\n            \n            {sections[currentSection].description && (\n              <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                {sections[currentSection].description}\n              </Typography>\n            )}\n\n            {/* Current Question */}\n            {getCurrentSectionQuestions().length > 0 && (\n              <QuestionCard>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Question {currentQuestion + 1} of {getCurrentSectionQuestions().length}\n                  </Typography>\n                  \n                  <Typography variant=\"h5\" paragraph>\n                    {getCurrentSectionQuestions()[currentQuestion].text}\n                  </Typography>\n                  \n                  <FormControl component=\"fieldset\" fullWidth>\n                    <RadioGroup\n                      value={responses[getCurrentSectionQuestions()[currentQuestion].id] || ''}\n                      onChange={(e) => handleOptionSelect(\n                        getCurrentSectionQuestions()[currentQuestion].id, \n                        parseInt(e.target.value)\n                      )}\n                    >\n                      <Grid container spacing={2}>\n                        {getCurrentSectionQuestions()[currentQuestion].options.map((option, index) => (\n                          <Grid item xs={12} key={index}>\n                            <OptionButton\n                              value={option.score}\n                              control={<Radio color=\"primary\" />}\n                              label={option.text}\n                              selected={responses[getCurrentSectionQuestions()[currentQuestion].id] === option.score}\n                            />\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </RadioGroup>\n                  </FormControl>\n                </CardContent>\n              </QuestionCard>\n            )}\n\n            {/* Navigation Buttons */}\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n              <NavigationButton\n                variant=\"outlined\"\n                startIcon={<ArrowBack />}\n                onClick={handleBack}\n                disabled={currentSection === 0 && currentQuestion === 0}\n              >\n                Back\n              </NavigationButton>\n              \n              <NavigationButton\n                variant=\"contained\"\n                endIcon={currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? <CheckCircle /> : <ArrowForward />}\n                onClick={handleNext}\n                disabled={!isCurrentQuestionAnswered() || loading}\n              >\n                {currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? 'Submit' : 'Next'}\n                {loading && <CircularProgress size={24} sx={{ ml: 1 }} />}\n              </NavigationButton>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Questionnaire;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}