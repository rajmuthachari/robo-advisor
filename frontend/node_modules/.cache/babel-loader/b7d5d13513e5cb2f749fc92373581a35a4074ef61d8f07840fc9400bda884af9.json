{"ast":null,"code":"var _jsxFileName = \"/Users/raj/MSc/BMD5302/robo-advisor/frontend/src/components/Questionnaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Stepper, Step, StepLabel, Typography, Button, Card, CardContent, Radio, RadioGroup, FormControlLabel, FormControl, CircularProgress, Paper, Container, Grid } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { ArrowForward, ArrowBack, CheckCircle } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Styled components\nconst QuestionCard = styled(Card)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  borderRadius: theme.spacing(2),\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)'\n  }\n}));\n_c = QuestionCard;\nconst OptionButton = styled(FormControlLabel)(({\n  theme,\n  selected\n}) => ({\n  width: '100%',\n  margin: theme.spacing(1, 0),\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(1),\n  border: selected ? `2px solid ${theme.palette.primary.main}` : '1px solid #e0e0e0',\n  backgroundColor: selected ? 'rgba(63, 81, 181, 0.08)' : 'white',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: selected ? 'rgba(63, 81, 181, 0.12)' : 'rgba(0, 0, 0, 0.04)',\n    transform: 'scale(1.01)'\n  }\n}));\n_c2 = OptionButton;\nconst NavigationButton = styled(Button)(({\n  theme\n}) => ({\n  margin: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  borderRadius: theme.spacing(3)\n}));\n_c3 = NavigationButton;\nconst SectionHeading = styled(Typography)(({\n  theme\n}) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  color: theme.palette.primary.main,\n  fontWeight: 600\n}));\n\n// Main Questionnaire Component\n_c4 = SectionHeading;\nconst Questionnaire = ({\n  onComplete\n}) => {\n  _s();\n  const [questionnaire, setQuestionnaire] = useState(null);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch questionnaire data\n  useEffect(() => {\n    const fetchQuestionnaire = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_URL}/questionnaire`);\n        setQuestionnaire(response.data);\n\n        // Initialize responses object\n        const initialResponses = {};\n        response.data.questions.forEach(q => {\n          initialResponses[q.id] = null;\n        });\n        setResponses(initialResponses);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load questionnaire. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching questionnaire:', err);\n      }\n    };\n    fetchQuestionnaire();\n  }, []);\n\n  // Group questions by section\n  const getQuestionsBySection = () => {\n    if (!questionnaire) return [];\n    const sections = questionnaire.sections.map(section => ({\n      ...section,\n      questions: questionnaire.questions.filter(q => q.section === section.id)\n    }));\n    return sections;\n  };\n  const sections = getQuestionsBySection();\n\n  // Get current section questions\n  const getCurrentSectionQuestions = () => {\n    if (sections.length === 0) return [];\n    return sections[currentSection].questions;\n  };\n\n  // Handle option selection\n  const handleOptionSelect = (questionId, value) => {\n    setResponses({\n      ...responses,\n      [questionId]: value\n    });\n  };\n\n  // Navigation handlers\n  const handleNext = () => {\n    const sectionQuestions = getCurrentSectionQuestions();\n    if (currentQuestion < sectionQuestions.length - 1) {\n      // Move to next question in section\n      setCurrentQuestion(currentQuestion + 1);\n    } else if (currentSection < sections.length - 1) {\n      // Move to next section\n      setCurrentSection(currentSection + 1);\n      setCurrentQuestion(0);\n    } else {\n      // Questionnaire complete\n      submitQuestionnaire();\n    }\n  };\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      // Move to previous question in section\n      setCurrentQuestion(currentQuestion - 1);\n    } else if (currentSection > 0) {\n      // Move to last question of previous section\n      setCurrentSection(currentSection - 1);\n      const prevSectionQuestions = sections[currentSection - 1].questions;\n      setCurrentQuestion(prevSectionQuestions.length - 1);\n    }\n  };\n\n  // Submit questionnaire\n  const submitQuestionnaire = async () => {\n    try {\n      setLoading(true);\n\n      // Convert responses object to array of scores\n      const responseScores = Object.keys(responses).map(questionId => {\n        return responses[questionId];\n      });\n\n      // Submit to API\n      const response = await axios.post(`${API_URL}/complete`, {\n        responses: responseScores\n      });\n\n      // Call onComplete with results\n      onComplete(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to submit your responses. Please try again later.');\n      setLoading(false);\n      console.error('Error submitting questionnaire:', err);\n    }\n  };\n\n  // Check if current question is answered\n  const isCurrentQuestionAnswered = () => {\n    if (!questionnaire) return false;\n    const sectionQuestions = getCurrentSectionQuestions();\n    if (sectionQuestions.length === 0) return false;\n    const currentQuestionId = sectionQuestions[currentQuestion].id;\n    return responses[currentQuestionId] !== null;\n  };\n\n  // Loading state\n  if (loading && !questionnaire) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          maxWidth: 500,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"error\",\n          gutterBottom: true,\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            mt: 3\n          },\n          onClick: () => window.location.reload(),\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n\n  // No questionnaire data\n  if (!questionnaire) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No questionnaire available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render the questionnaire\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: questionnaire.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), questionnaire.description && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        align: \"center\",\n        color: \"textSecondary\",\n        paragraph: true,\n        children: questionnaire.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: currentSection,\n        alternativeLabel: true,\n        sx: {\n          mt: 4,\n          mb: 2\n        },\n        children: sections.map(section => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: section.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, section.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), sections.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SectionHeading, {\n          variant: \"h5\",\n          children: sections[currentSection].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), sections[currentSection].description && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          paragraph: true,\n          children: sections[currentSection].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 15\n        }, this), getCurrentSectionQuestions().length > 0 && /*#__PURE__*/_jsxDEV(QuestionCard, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: [\"Question \", currentQuestion + 1, \" of \", getCurrentSectionQuestions().length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              paragraph: true,\n              children: getCurrentSectionQuestions()[currentQuestion].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                value: responses[getCurrentSectionQuestions()[currentQuestion].id] || '',\n                onChange: e => handleOptionSelect(getCurrentSectionQuestions()[currentQuestion].id, parseInt(e.target.value)),\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: getCurrentSectionQuestions()[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(OptionButton, {\n                      value: option.score,\n                      control: /*#__PURE__*/_jsxDEV(Radio, {\n                        color: \"primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 40\n                      }, this),\n                      label: option.text,\n                      selected: responses[getCurrentSectionQuestions()[currentQuestion].id] === option.score\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(NavigationButton, {\n            variant: \"outlined\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 28\n            }, this),\n            onClick: handleBack,\n            disabled: currentSection === 0 && currentQuestion === 0,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Questionnaire, \"pWEihPYNXroUYkYhgMmWIwLkgVQ=\");\n_c5 = Questionnaire;\nexport default Questionnaire;\n/*#__PURE__*/_jsxDEV(NavigationButton, {\n  variant: \"contained\",\n  endIcon: currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 130\n  }, this) : /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 148\n  }, this),\n  onClick: handleNext,\n  disabled: !isCurrentQuestionAnswered() || loading,\n  children: [currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? 'Submit' : 'Next', loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n    size: 24,\n    sx: {\n      ml: 1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 29\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 330,\n  columnNumber: 15\n}, this);\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"QuestionCard\");\n$RefreshReg$(_c2, \"OptionButton\");\n$RefreshReg$(_c3, \"NavigationButton\");\n$RefreshReg$(_c4, \"SectionHeading\");\n$RefreshReg$(_c5, \"Questionnaire\");","map":{"version":3,"names":["React","useState","useEffect","Box","Stepper","Step","StepLabel","Typography","Button","Card","CardContent","Radio","RadioGroup","FormControlLabel","FormControl","CircularProgress","Paper","Container","Grid","styled","ArrowForward","ArrowBack","CheckCircle","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","QuestionCard","theme","marginTop","spacing","marginBottom","boxShadow","borderRadius","transition","transform","_c","OptionButton","selected","width","margin","padding","border","palette","primary","main","backgroundColor","_c2","NavigationButton","_c3","SectionHeading","color","fontWeight","_c4","Questionnaire","onComplete","_s","questionnaire","setQuestionnaire","currentSection","setCurrentSection","currentQuestion","setCurrentQuestion","responses","setResponses","loading","setLoading","error","setError","fetchQuestionnaire","response","get","data","initialResponses","questions","forEach","q","id","err","console","getQuestionsBySection","sections","map","section","filter","getCurrentSectionQuestions","length","handleOptionSelect","questionId","value","handleNext","sectionQuestions","submitQuestionnaire","handleBack","prevSectionQuestions","responseScores","Object","keys","post","isCurrentQuestionAnswered","currentQuestionId","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","maxWidth","textAlign","variant","gutterBottom","mt","onClick","window","location","reload","my","align","title","description","paragraph","activeStep","alternativeLabel","mb","text","component","fullWidth","onChange","e","parseInt","target","container","options","option","index","item","xs","score","control","label","startIcon","disabled","_c5","endIcon","size","ml","$RefreshReg$"],"sources":["/Users/raj/MSc/BMD5302/robo-advisor/frontend/src/components/Questionnaire.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Stepper, \n  Step, \n  StepLabel, \n  Typography, \n  Button, \n  Card, \n  CardContent, \n  Radio, \n  RadioGroup,\n  FormControlLabel,\n  FormControl, \n  CircularProgress, \n  Paper,\n  Container,\n  Grid\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { ArrowForward, ArrowBack, CheckCircle } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configuration\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Styled components\nconst QuestionCard = styled(Card)(({ theme }) => ({\n  marginTop: theme.spacing(4),\n  marginBottom: theme.spacing(4),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  borderRadius: theme.spacing(2),\n  transition: 'transform 0.3s ease-in-out',\n  '&:hover': {\n    transform: 'translateY(-5px)',\n  },\n}));\n\nconst OptionButton = styled(FormControlLabel)(({ theme, selected }) => ({\n  width: '100%',\n  margin: theme.spacing(1, 0),\n  padding: theme.spacing(2),\n  borderRadius: theme.spacing(1),\n  border: selected ? `2px solid ${theme.palette.primary.main}` : '1px solid #e0e0e0',\n  backgroundColor: selected ? 'rgba(63, 81, 181, 0.08)' : 'white',\n  transition: 'all 0.2s ease',\n  '&:hover': {\n    backgroundColor: selected ? 'rgba(63, 81, 181, 0.12)' : 'rgba(0, 0, 0, 0.04)',\n    transform: 'scale(1.01)',\n  },\n}));\n\nconst NavigationButton = styled(Button)(({ theme }) => ({\n  margin: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  borderRadius: theme.spacing(3),\n}));\n\nconst SectionHeading = styled(Typography)(({ theme }) => ({\n  marginTop: theme.spacing(2),\n  marginBottom: theme.spacing(2),\n  color: theme.palette.primary.main,\n  fontWeight: 600,\n}));\n\n// Main Questionnaire Component\nconst Questionnaire = ({ onComplete }) => {\n  const [questionnaire, setQuestionnaire] = useState(null);\n  const [currentSection, setCurrentSection] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [responses, setResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch questionnaire data\n  useEffect(() => {\n    const fetchQuestionnaire = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_URL}/questionnaire`);\n        setQuestionnaire(response.data);\n        \n        // Initialize responses object\n        const initialResponses = {};\n        response.data.questions.forEach(q => {\n          initialResponses[q.id] = null;\n        });\n        setResponses(initialResponses);\n        \n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load questionnaire. Please try again later.');\n        setLoading(false);\n        console.error('Error fetching questionnaire:', err);\n      }\n    };\n\n    fetchQuestionnaire();\n  }, []);\n\n  // Group questions by section\n  const getQuestionsBySection = () => {\n    if (!questionnaire) return [];\n    \n    const sections = questionnaire.sections.map(section => ({\n      ...section,\n      questions: questionnaire.questions.filter(q => q.section === section.id)\n    }));\n    \n    return sections;\n  };\n\n  const sections = getQuestionsBySection();\n  \n  // Get current section questions\n  const getCurrentSectionQuestions = () => {\n    if (sections.length === 0) return [];\n    return sections[currentSection].questions;\n  };\n\n  // Handle option selection\n  const handleOptionSelect = (questionId, value) => {\n    setResponses({\n      ...responses,\n      [questionId]: value\n    });\n  };\n\n  // Navigation handlers\n  const handleNext = () => {\n    const sectionQuestions = getCurrentSectionQuestions();\n    \n    if (currentQuestion < sectionQuestions.length - 1) {\n      // Move to next question in section\n      setCurrentQuestion(currentQuestion + 1);\n    } else if (currentSection < sections.length - 1) {\n      // Move to next section\n      setCurrentSection(currentSection + 1);\n      setCurrentQuestion(0);\n    } else {\n      // Questionnaire complete\n      submitQuestionnaire();\n    }\n  };\n\n  const handleBack = () => {\n    if (currentQuestion > 0) {\n      // Move to previous question in section\n      setCurrentQuestion(currentQuestion - 1);\n    } else if (currentSection > 0) {\n      // Move to last question of previous section\n      setCurrentSection(currentSection - 1);\n      const prevSectionQuestions = sections[currentSection - 1].questions;\n      setCurrentQuestion(prevSectionQuestions.length - 1);\n    }\n  };\n\n  // Submit questionnaire\n  const submitQuestionnaire = async () => {\n    try {\n      setLoading(true);\n      \n      // Convert responses object to array of scores\n      const responseScores = Object.keys(responses).map(questionId => {\n        return responses[questionId];\n      });\n      \n      // Submit to API\n      const response = await axios.post(`${API_URL}/complete`, {\n        responses: responseScores\n      });\n      \n      // Call onComplete with results\n      onComplete(response.data);\n      \n      setLoading(false);\n    } catch (err) {\n      setError('Failed to submit your responses. Please try again later.');\n      setLoading(false);\n      console.error('Error submitting questionnaire:', err);\n    }\n  };\n\n  // Check if current question is answered\n  const isCurrentQuestionAnswered = () => {\n    if (!questionnaire) return false;\n    \n    const sectionQuestions = getCurrentSectionQuestions();\n    if (sectionQuestions.length === 0) return false;\n    \n    const currentQuestionId = sectionQuestions[currentQuestion].id;\n    return responses[currentQuestionId] !== null;\n  };\n\n  // Loading state\n  if (loading && !questionnaire) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <Paper elevation={3} sx={{ p: 4, maxWidth: 500, textAlign: 'center' }}>\n          <Typography variant=\"h5\" color=\"error\" gutterBottom>\n            Error\n          </Typography>\n          <Typography>{error}</Typography>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            sx={{ mt: 3 }}\n            onClick={() => window.location.reload()}\n          >\n            Try Again\n          </Button>\n        </Paper>\n      </Box>\n    );\n  }\n\n  // No questionnaire data\n  if (!questionnaire) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\n        <Typography>No questionnaire available.</Typography>\n      </Box>\n    );\n  }\n\n  // Render the questionnaire\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ width: '100%', my: 4 }}>\n        {/* Questionnaire Header */}\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          {questionnaire.title}\n        </Typography>\n        \n        {questionnaire.description && (\n          <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" paragraph>\n            {questionnaire.description}\n          </Typography>\n        )}\n\n        {/* Progress Stepper */}\n        <Stepper activeStep={currentSection} alternativeLabel sx={{ mt: 4, mb: 2 }}>\n          {sections.map((section) => (\n            <Step key={section.id}>\n              <StepLabel>{section.title}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n\n        {/* Current Section */}\n        {sections.length > 0 && (\n          <>\n            <SectionHeading variant=\"h5\">\n              {sections[currentSection].title}\n            </SectionHeading>\n            \n            {sections[currentSection].description && (\n              <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n                {sections[currentSection].description}\n              </Typography>\n            )}\n\n            {/* Current Question */}\n            {getCurrentSectionQuestions().length > 0 && (\n              <QuestionCard>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    Question {currentQuestion + 1} of {getCurrentSectionQuestions().length}\n                  </Typography>\n                  \n                  <Typography variant=\"h5\" paragraph>\n                    {getCurrentSectionQuestions()[currentQuestion].text}\n                  </Typography>\n                  \n                  <FormControl component=\"fieldset\" fullWidth>\n                    <RadioGroup\n                      value={responses[getCurrentSectionQuestions()[currentQuestion].id] || ''}\n                      onChange={(e) => handleOptionSelect(\n                        getCurrentSectionQuestions()[currentQuestion].id, \n                        parseInt(e.target.value)\n                      )}\n                    >\n                      <Grid container spacing={2}>\n                        {getCurrentSectionQuestions()[currentQuestion].options.map((option, index) => (\n                          <Grid item xs={12} key={index}>\n                            <OptionButton\n                              value={option.score}\n                              control={<Radio color=\"primary\" />}\n                              label={option.text}\n                              selected={responses[getCurrentSectionQuestions()[currentQuestion].id] === option.score}\n                            />\n                          </Grid>\n                        ))}\n                      </Grid>\n                    </RadioGroup>\n                  </FormControl>\n                </CardContent>\n              </QuestionCard>\n            )}\n\n            {/* Navigation Buttons */}\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n              <NavigationButton\n                variant=\"outlined\"\n                startIcon={<ArrowBack />}\n                onClick={handleBack}\n                disabled={currentSection === 0 && currentQuestion === 0}\n              >\n                Back\n              </NavigationButton>\n            </Box>\n          </>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Questionnaire;\n              \n              <NavigationButton\n                variant=\"contained\"\n                endIcon={currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? <CheckCircle /> : <ArrowForward />}\n                onClick={handleNext}\n                disabled={!isCurrentQuestionAnswered() || loading}\n              >\n                {currentSection === sections.length - 1 && currentQuestion === getCurrentSectionQuestions().length - 1 ? 'Submit' : 'Next'}\n                {loading && <CircularProgress size={24} sx={{ ml: 1 }} />}\n              </NavigationButton>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}